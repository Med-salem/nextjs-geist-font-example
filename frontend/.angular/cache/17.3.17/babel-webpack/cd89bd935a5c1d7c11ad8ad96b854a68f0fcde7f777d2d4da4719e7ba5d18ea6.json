{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:8000/api/v1/auth';\n      this.userSubject = new BehaviorSubject(null);\n      this.user$ = this.userSubject.asObservable();\n      // Check for existing auth token in localStorage\n      const token = localStorage.getItem('auth_token');\n      if (token) {\n        this.userSubject.next({\n          token\n        });\n      }\n    }\n    requestOTP(phoneNumber) {\n      return this.http.post(`${this.apiUrl}/phone-otp/`, {\n        phone_number: phoneNumber\n      });\n    }\n    verifyOTP(phoneNumber, otp) {\n      return this.http.post(`${this.apiUrl}/phone-otp/`, {\n        phone_number: phoneNumber,\n        otp: otp\n      }).pipe(tap(response => {\n        if (response.token) {\n          localStorage.setItem('auth_token', response.token);\n          this.userSubject.next({\n            token: response.token\n          });\n        }\n      }));\n    }\n    logout() {\n      localStorage.removeItem('auth_token');\n      this.userSubject.next(null);\n    }\n    isAuthenticated() {\n      return !!localStorage.getItem('auth_token');\n    }\n    getAuthToken() {\n      return localStorage.getItem('auth_token');\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}