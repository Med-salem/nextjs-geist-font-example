{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nfunction LoginComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter a valid email.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.phoneNumber = '';\n      this.otp = '';\n      this.errorMessage = '';\n      this.otpRequested = false;\n      this.loading = false;\n    }\n    requestOTP() {\n      if (!this.phoneNumber) {\n        this.errorMessage = 'Please enter a phone number';\n        return;\n      }\n      this.loading = true;\n      this.authService.requestOTP(this.phoneNumber).subscribe({\n        next: response => {\n          this.otpRequested = true;\n          this.errorMessage = '';\n          this.loading = false;\n        },\n        error: error => {\n          this.errorMessage = error.error?.message || 'Failed to send OTP';\n          this.loading = false;\n        }\n      });\n    }\n    verifyOTP() {\n      if (!this.otp) {\n        this.errorMessage = 'Please enter the OTP';\n        return;\n      }\n      this.loading = true;\n      this.authService.verifyOTP(this.phoneNumber, this.otp).subscribe({\n        next: response => {\n          this.errorMessage = '';\n          this.loading = false;\n          this.router.navigate(['/dashboard']);\n        },\n        error: error => {\n          this.errorMessage = error.error?.message || 'Invalid OTP';\n          this.loading = false;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 19,\n        vars: 6,\n        consts: [[1, \"login-card\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 3, \"ngModelChange\", \"ngModel\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 3, \"ngModelChange\", \"ngModel\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width\", 3, \"disabled\"], [1, \"error-message\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\")(2, \"mat-card-title\");\n            i0.ɵɵtext(3, \"Login\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n              return ctx.login();\n            });\n            i0.ɵɵelementStart(6, \"mat-form-field\", 2)(7, \"mat-label\");\n            i0.ɵɵtext(8, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"input\", 3);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(10, LoginComponent_mat_error_10_Template, 2, 0, \"mat-error\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"mat-form-field\", 2)(12, \"mat-label\");\n            i0.ɵɵtext(13, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"input\", 5);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(15, LoginComponent_mat_error_15_Template, 2, 0, \"mat-error\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 1, \"div\", 6);\n            i0.ɵɵelementStart(17, \"button\", 7);\n            i0.ɵɵtext(18, \" Login \");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(9);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.email && !ctx.email.includes(\"@\"));\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.password && ctx.password.length < 6);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", !ctx.email || !ctx.password);\n          }\n        },\n        dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.EmailValidator, i4.NgModel, i4.NgForm, i5.MatButton, i6.MatCard, i6.MatCardContent, i6.MatCardHeader, i6.MatCardTitle, i7.MatInput, i8.MatFormField, i8.MatLabel, i8.MatError],\n        styles: [\".login-card[_ngcontent-%COMP%]{max-width:400px;margin:2rem auto;padding:2rem}.full-width[_ngcontent-%COMP%]{width:100%;margin-bottom:1rem}mat-card-header[_ngcontent-%COMP%]{justify-content:center;margin-bottom:1rem}mat-card-title[_ngcontent-%COMP%]{font-size:2rem;font-weight:500}.error-message[_ngcontent-%COMP%]{color:#f44336;text-align:center;margin-bottom:1rem;font-weight:500}button[mat-raised-button][_ngcontent-%COMP%]{padding:.5rem;font-size:1rem}mat-form-field[_ngcontent-%COMP%]{display:block}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}